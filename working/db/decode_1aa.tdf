--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=13 LPM_WIDTH=4 data eq
--VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:25:18:06:53:SJ cbx_lpm_add_sub 2017:10:25:18:06:53:SJ cbx_lpm_compare 2017:10:25:18:06:53:SJ cbx_lpm_decode 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ cbx_nadder 2017:10:25:18:06:53:SJ cbx_stratix 2017:10:25:18:06:53:SJ cbx_stratixii 2017:10:25:18:06:53:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_1aa
( 
	data[3..0]	:	input;
	eq[12..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[12..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode192w[3..0]	: WIRE;
	w_anode209w[3..0]	: WIRE;
	w_anode219w[3..0]	: WIRE;
	w_anode229w[3..0]	: WIRE;
	w_anode239w[3..0]	: WIRE;
	w_anode249w[3..0]	: WIRE;
	w_anode259w[3..0]	: WIRE;
	w_anode269w[3..0]	: WIRE;
	w_anode279w[3..0]	: WIRE;
	w_anode290w[3..0]	: WIRE;
	w_anode300w[3..0]	: WIRE;
	w_anode310w[3..0]	: WIRE;
	w_anode320w[3..0]	: WIRE;
	w_anode330w[3..0]	: WIRE;
	w_anode340w[3..0]	: WIRE;
	w_anode350w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[4..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode269w[3..3], w_anode259w[3..3], w_anode249w[3..3], w_anode239w[3..3], w_anode229w[3..3], w_anode219w[3..3], w_anode209w[3..3], w_anode192w[3..3]);
	eq_wire2w[] = ( w_anode350w[3..3], w_anode340w[3..3], w_anode330w[3..3], w_anode320w[3..3], w_anode310w[3..3], w_anode300w[3..3], w_anode290w[3..3], w_anode279w[3..3]);
	w_anode192w[] = ( (w_anode192w[2..2] & (! data_wire[2..2])), (w_anode192w[1..1] & (! data_wire[1..1])), (w_anode192w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode209w[] = ( (w_anode209w[2..2] & (! data_wire[2..2])), (w_anode209w[1..1] & (! data_wire[1..1])), (w_anode209w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode219w[] = ( (w_anode219w[2..2] & (! data_wire[2..2])), (w_anode219w[1..1] & data_wire[1..1]), (w_anode219w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode229w[] = ( (w_anode229w[2..2] & (! data_wire[2..2])), (w_anode229w[1..1] & data_wire[1..1]), (w_anode229w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode239w[] = ( (w_anode239w[2..2] & data_wire[2..2]), (w_anode239w[1..1] & (! data_wire[1..1])), (w_anode239w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode249w[] = ( (w_anode249w[2..2] & data_wire[2..2]), (w_anode249w[1..1] & (! data_wire[1..1])), (w_anode249w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode259w[] = ( (w_anode259w[2..2] & data_wire[2..2]), (w_anode259w[1..1] & data_wire[1..1]), (w_anode259w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode269w[] = ( (w_anode269w[2..2] & data_wire[2..2]), (w_anode269w[1..1] & data_wire[1..1]), (w_anode269w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode279w[] = ( (w_anode279w[2..2] & (! data_wire[2..2])), (w_anode279w[1..1] & (! data_wire[1..1])), (w_anode279w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode290w[] = ( (w_anode290w[2..2] & (! data_wire[2..2])), (w_anode290w[1..1] & (! data_wire[1..1])), (w_anode290w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode300w[] = ( (w_anode300w[2..2] & (! data_wire[2..2])), (w_anode300w[1..1] & data_wire[1..1]), (w_anode300w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode310w[] = ( (w_anode310w[2..2] & (! data_wire[2..2])), (w_anode310w[1..1] & data_wire[1..1]), (w_anode310w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode320w[] = ( (w_anode320w[2..2] & data_wire[2..2]), (w_anode320w[1..1] & (! data_wire[1..1])), (w_anode320w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode330w[] = ( (w_anode330w[2..2] & data_wire[2..2]), (w_anode330w[1..1] & (! data_wire[1..1])), (w_anode330w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode340w[] = ( (w_anode340w[2..2] & data_wire[2..2]), (w_anode340w[1..1] & data_wire[1..1]), (w_anode340w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode350w[] = ( (w_anode350w[2..2] & data_wire[2..2]), (w_anode350w[1..1] & data_wire[1..1]), (w_anode350w[0..0] & data_wire[0..0]), enable_wire2);
END;
--ERROR FILE
