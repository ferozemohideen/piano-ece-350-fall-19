--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=26 LPM_WIDTH=5 data eq
--VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:25:18:06:53:SJ cbx_lpm_add_sub 2017:10:25:18:06:53:SJ cbx_lpm_compare 2017:10:25:18:06:53:SJ cbx_lpm_decode 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ cbx_nadder 2017:10:25:18:06:53:SJ cbx_stratix 2017:10:25:18:06:53:SJ cbx_stratixii 2017:10:25:18:06:53:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_6aa
( 
	data[4..0]	:	input;
	eq[25..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[25..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode373w[2..0]	: WIRE;
	w_anode387w[3..0]	: WIRE;
	w_anode404w[3..0]	: WIRE;
	w_anode414w[3..0]	: WIRE;
	w_anode424w[3..0]	: WIRE;
	w_anode434w[3..0]	: WIRE;
	w_anode444w[3..0]	: WIRE;
	w_anode454w[3..0]	: WIRE;
	w_anode464w[3..0]	: WIRE;
	w_anode476w[2..0]	: WIRE;
	w_anode486w[3..0]	: WIRE;
	w_anode497w[3..0]	: WIRE;
	w_anode507w[3..0]	: WIRE;
	w_anode517w[3..0]	: WIRE;
	w_anode527w[3..0]	: WIRE;
	w_anode537w[3..0]	: WIRE;
	w_anode547w[3..0]	: WIRE;
	w_anode557w[3..0]	: WIRE;
	w_anode568w[2..0]	: WIRE;
	w_anode578w[3..0]	: WIRE;
	w_anode589w[3..0]	: WIRE;
	w_anode599w[3..0]	: WIRE;
	w_anode609w[3..0]	: WIRE;
	w_anode619w[3..0]	: WIRE;
	w_anode629w[3..0]	: WIRE;
	w_anode639w[3..0]	: WIRE;
	w_anode649w[3..0]	: WIRE;
	w_anode660w[2..0]	: WIRE;
	w_anode670w[3..0]	: WIRE;
	w_anode681w[3..0]	: WIRE;
	w_anode691w[3..0]	: WIRE;
	w_anode701w[3..0]	: WIRE;
	w_anode711w[3..0]	: WIRE;
	w_anode721w[3..0]	: WIRE;
	w_anode731w[3..0]	: WIRE;
	w_anode741w[3..0]	: WIRE;
	w_data371w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[25..0] = eq_wire[25..0];
	eq_wire[] = ( ( w_anode741w[3..3], w_anode731w[3..3], w_anode721w[3..3], w_anode711w[3..3], w_anode701w[3..3], w_anode691w[3..3], w_anode681w[3..3], w_anode670w[3..3]), ( w_anode649w[3..3], w_anode639w[3..3], w_anode629w[3..3], w_anode619w[3..3], w_anode609w[3..3], w_anode599w[3..3], w_anode589w[3..3], w_anode578w[3..3]), ( w_anode557w[3..3], w_anode547w[3..3], w_anode537w[3..3], w_anode527w[3..3], w_anode517w[3..3], w_anode507w[3..3], w_anode497w[3..3], w_anode486w[3..3]), ( w_anode464w[3..3], w_anode454w[3..3], w_anode444w[3..3], w_anode434w[3..3], w_anode424w[3..3], w_anode414w[3..3], w_anode404w[3..3], w_anode387w[3..3]));
	w_anode373w[] = ( (w_anode373w[1..1] & (! data_wire[4..4])), (w_anode373w[0..0] & (! data_wire[3..3])), B"1");
	w_anode387w[] = ( (w_anode387w[2..2] & (! w_data371w[2..2])), (w_anode387w[1..1] & (! w_data371w[1..1])), (w_anode387w[0..0] & (! w_data371w[0..0])), w_anode373w[2..2]);
	w_anode404w[] = ( (w_anode404w[2..2] & (! w_data371w[2..2])), (w_anode404w[1..1] & (! w_data371w[1..1])), (w_anode404w[0..0] & w_data371w[0..0]), w_anode373w[2..2]);
	w_anode414w[] = ( (w_anode414w[2..2] & (! w_data371w[2..2])), (w_anode414w[1..1] & w_data371w[1..1]), (w_anode414w[0..0] & (! w_data371w[0..0])), w_anode373w[2..2]);
	w_anode424w[] = ( (w_anode424w[2..2] & (! w_data371w[2..2])), (w_anode424w[1..1] & w_data371w[1..1]), (w_anode424w[0..0] & w_data371w[0..0]), w_anode373w[2..2]);
	w_anode434w[] = ( (w_anode434w[2..2] & w_data371w[2..2]), (w_anode434w[1..1] & (! w_data371w[1..1])), (w_anode434w[0..0] & (! w_data371w[0..0])), w_anode373w[2..2]);
	w_anode444w[] = ( (w_anode444w[2..2] & w_data371w[2..2]), (w_anode444w[1..1] & (! w_data371w[1..1])), (w_anode444w[0..0] & w_data371w[0..0]), w_anode373w[2..2]);
	w_anode454w[] = ( (w_anode454w[2..2] & w_data371w[2..2]), (w_anode454w[1..1] & w_data371w[1..1]), (w_anode454w[0..0] & (! w_data371w[0..0])), w_anode373w[2..2]);
	w_anode464w[] = ( (w_anode464w[2..2] & w_data371w[2..2]), (w_anode464w[1..1] & w_data371w[1..1]), (w_anode464w[0..0] & w_data371w[0..0]), w_anode373w[2..2]);
	w_anode476w[] = ( (w_anode476w[1..1] & (! data_wire[4..4])), (w_anode476w[0..0] & data_wire[3..3]), B"1");
	w_anode486w[] = ( (w_anode486w[2..2] & (! w_data371w[2..2])), (w_anode486w[1..1] & (! w_data371w[1..1])), (w_anode486w[0..0] & (! w_data371w[0..0])), w_anode476w[2..2]);
	w_anode497w[] = ( (w_anode497w[2..2] & (! w_data371w[2..2])), (w_anode497w[1..1] & (! w_data371w[1..1])), (w_anode497w[0..0] & w_data371w[0..0]), w_anode476w[2..2]);
	w_anode507w[] = ( (w_anode507w[2..2] & (! w_data371w[2..2])), (w_anode507w[1..1] & w_data371w[1..1]), (w_anode507w[0..0] & (! w_data371w[0..0])), w_anode476w[2..2]);
	w_anode517w[] = ( (w_anode517w[2..2] & (! w_data371w[2..2])), (w_anode517w[1..1] & w_data371w[1..1]), (w_anode517w[0..0] & w_data371w[0..0]), w_anode476w[2..2]);
	w_anode527w[] = ( (w_anode527w[2..2] & w_data371w[2..2]), (w_anode527w[1..1] & (! w_data371w[1..1])), (w_anode527w[0..0] & (! w_data371w[0..0])), w_anode476w[2..2]);
	w_anode537w[] = ( (w_anode537w[2..2] & w_data371w[2..2]), (w_anode537w[1..1] & (! w_data371w[1..1])), (w_anode537w[0..0] & w_data371w[0..0]), w_anode476w[2..2]);
	w_anode547w[] = ( (w_anode547w[2..2] & w_data371w[2..2]), (w_anode547w[1..1] & w_data371w[1..1]), (w_anode547w[0..0] & (! w_data371w[0..0])), w_anode476w[2..2]);
	w_anode557w[] = ( (w_anode557w[2..2] & w_data371w[2..2]), (w_anode557w[1..1] & w_data371w[1..1]), (w_anode557w[0..0] & w_data371w[0..0]), w_anode476w[2..2]);
	w_anode568w[] = ( (w_anode568w[1..1] & data_wire[4..4]), (w_anode568w[0..0] & (! data_wire[3..3])), B"1");
	w_anode578w[] = ( (w_anode578w[2..2] & (! w_data371w[2..2])), (w_anode578w[1..1] & (! w_data371w[1..1])), (w_anode578w[0..0] & (! w_data371w[0..0])), w_anode568w[2..2]);
	w_anode589w[] = ( (w_anode589w[2..2] & (! w_data371w[2..2])), (w_anode589w[1..1] & (! w_data371w[1..1])), (w_anode589w[0..0] & w_data371w[0..0]), w_anode568w[2..2]);
	w_anode599w[] = ( (w_anode599w[2..2] & (! w_data371w[2..2])), (w_anode599w[1..1] & w_data371w[1..1]), (w_anode599w[0..0] & (! w_data371w[0..0])), w_anode568w[2..2]);
	w_anode609w[] = ( (w_anode609w[2..2] & (! w_data371w[2..2])), (w_anode609w[1..1] & w_data371w[1..1]), (w_anode609w[0..0] & w_data371w[0..0]), w_anode568w[2..2]);
	w_anode619w[] = ( (w_anode619w[2..2] & w_data371w[2..2]), (w_anode619w[1..1] & (! w_data371w[1..1])), (w_anode619w[0..0] & (! w_data371w[0..0])), w_anode568w[2..2]);
	w_anode629w[] = ( (w_anode629w[2..2] & w_data371w[2..2]), (w_anode629w[1..1] & (! w_data371w[1..1])), (w_anode629w[0..0] & w_data371w[0..0]), w_anode568w[2..2]);
	w_anode639w[] = ( (w_anode639w[2..2] & w_data371w[2..2]), (w_anode639w[1..1] & w_data371w[1..1]), (w_anode639w[0..0] & (! w_data371w[0..0])), w_anode568w[2..2]);
	w_anode649w[] = ( (w_anode649w[2..2] & w_data371w[2..2]), (w_anode649w[1..1] & w_data371w[1..1]), (w_anode649w[0..0] & w_data371w[0..0]), w_anode568w[2..2]);
	w_anode660w[] = ( (w_anode660w[1..1] & data_wire[4..4]), (w_anode660w[0..0] & data_wire[3..3]), B"1");
	w_anode670w[] = ( (w_anode670w[2..2] & (! w_data371w[2..2])), (w_anode670w[1..1] & (! w_data371w[1..1])), (w_anode670w[0..0] & (! w_data371w[0..0])), w_anode660w[2..2]);
	w_anode681w[] = ( (w_anode681w[2..2] & (! w_data371w[2..2])), (w_anode681w[1..1] & (! w_data371w[1..1])), (w_anode681w[0..0] & w_data371w[0..0]), w_anode660w[2..2]);
	w_anode691w[] = ( (w_anode691w[2..2] & (! w_data371w[2..2])), (w_anode691w[1..1] & w_data371w[1..1]), (w_anode691w[0..0] & (! w_data371w[0..0])), w_anode660w[2..2]);
	w_anode701w[] = ( (w_anode701w[2..2] & (! w_data371w[2..2])), (w_anode701w[1..1] & w_data371w[1..1]), (w_anode701w[0..0] & w_data371w[0..0]), w_anode660w[2..2]);
	w_anode711w[] = ( (w_anode711w[2..2] & w_data371w[2..2]), (w_anode711w[1..1] & (! w_data371w[1..1])), (w_anode711w[0..0] & (! w_data371w[0..0])), w_anode660w[2..2]);
	w_anode721w[] = ( (w_anode721w[2..2] & w_data371w[2..2]), (w_anode721w[1..1] & (! w_data371w[1..1])), (w_anode721w[0..0] & w_data371w[0..0]), w_anode660w[2..2]);
	w_anode731w[] = ( (w_anode731w[2..2] & w_data371w[2..2]), (w_anode731w[1..1] & w_data371w[1..1]), (w_anode731w[0..0] & (! w_data371w[0..0])), w_anode660w[2..2]);
	w_anode741w[] = ( (w_anode741w[2..2] & w_data371w[2..2]), (w_anode741w[1..1] & w_data371w[1..1]), (w_anode741w[0..0] & w_data371w[0..0]), w_anode660w[2..2]);
	w_data371w[2..0] = data_wire[2..0];
END;
--ERROR FILE
